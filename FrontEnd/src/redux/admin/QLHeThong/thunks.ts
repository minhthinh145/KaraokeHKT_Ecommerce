import { createAsyncThunk } from "@reduxjs/toolkit";
import {
  getAllTaiKhoanNhanVien,
  getAllTaiKhoanKhachHang,
  addTaiKhoanNhanVien,
  getLoaiTaiKhoan, // ‚úÖ API n√†y c√≥ trong backend
  getEmployeesWithoutAccounts,
  type NhanVienTaiKhoanDTO,
  type KhachHangTaiKhoanDTO,
  type AddTaiKhoanForNhanVienDTO,
  getAllAdminAccount, // ‚úÖ Fix type name
} from "../../../api/services/shared";
import type { ApiResponse } from "../../../api/types/apiResponse";
import type { NhanVienDTO } from "../../../api/services/shared";
// üî• Fetch All T√†i kho·∫£n Nh√¢n vi√™n
export const fetchAllNhanVien = createAsyncThunk(
  "qlHeThong/fetchAllNhanVien",
  async (_, { rejectWithValue }) => {
    try {
      const response: ApiResponse<NhanVienTaiKhoanDTO[]> =
        await getAllTaiKhoanNhanVien();

      if (response.isSuccess && response.data) {
        return response.data;
      } else {
        return rejectWithValue(
          response.message || "L·ªói khi l·∫•y danh s√°ch t√†i kho·∫£n nh√¢n vi√™n"
        );
      }
    } catch (error: any) {
      return rejectWithValue(error.message || "L·ªói h·ªá th·ªëng");
    }
  }
);

// üî• Fetch All T√†i kho·∫£n Kh√°ch h√†ng
export const fetchAllKhachHang = createAsyncThunk(
  "qlHeThong/fetchAllKhachHang",
  async (_, { rejectWithValue }) => {
    try {
      const response: ApiResponse<KhachHangTaiKhoanDTO[]> =
        await getAllTaiKhoanKhachHang();

      if (response.isSuccess && response.data) {
        return response.data;
      } else {
        return rejectWithValue(
          response.message || "L·ªói khi l·∫•y danh s√°ch t√†i kho·∫£n kh√°ch h√†ng"
        );
      }
    } catch (error: any) {
      return rejectWithValue(error.message || "L·ªói h·ªá th·ªëng");
    }
  }
);

// ‚úÖ Fetch Lo·∫°i t√†i kho·∫£n - Backend C√ì endpoint n√†y
export const fetchLoaiTaiKhoan = createAsyncThunk(
  "qlHeThong/fetchLoaiTaiKhoan",
  async (_, { rejectWithValue }) => {
    try {
      const response: ApiResponse<string[]> = await getLoaiTaiKhoan();

      if (response.isSuccess && response.data) {
        return response.data;
      } else {
        return rejectWithValue(
          response.message || "L·ªói khi l·∫•y danh s√°ch lo·∫°i t√†i kho·∫£n"
        );
      }
    } catch (error: any) {
      return rejectWithValue(error.message || "L·ªói h·ªá th·ªëng");
    }
  }
);

// üî• Fetch Nh√¢n vi√™n ch∆∞a c√≥ t√†i kho·∫£n - G·ªçi endpoint nhanvienAll
export const fetchNhanVienChuaCoTaiKhoan = createAsyncThunk(
  "qlHeThong/fetchNhanVienChuaCoTaiKhoan",
  async (_, { rejectWithValue }) => {
    try {
      const response: ApiResponse<NhanVienDTO[]> =
        await getEmployeesWithoutAccounts();

      if (response.isSuccess && response.data) {
        return response.data;
      } else {
        return rejectWithValue(
          response.message ||
            "L·ªói khi l·∫•y danh s√°ch nh√¢n vi√™n ch∆∞a c√≥ t√†i kho·∫£n"
        );
      }
    } catch (error: any) {
      return rejectWithValue(error.message || "L·ªói h·ªá th·ªëng");
    }
  }
);

// üî• Create T√†i kho·∫£n cho Nh√¢n vi√™n - G·ªçi endpoint gan-tai-khoan
export const createNhanVien = createAsyncThunk(
  "qlHeThong/createNhanVien",
  async (data: AddTaiKhoanForNhanVienDTO, { rejectWithValue }) => {
    try {
      const response: ApiResponse<any> = await addTaiKhoanNhanVien(data);

      if (response.isSuccess) {
        return response.data;
      } else {
        return rejectWithValue(response.message || "L·ªói khi t·∫°o t√†i kho·∫£n");
      }
    } catch (error: any) {
      return rejectWithValue(error.message || "L·ªói h·ªá th·ªëng");
    }
  }
);

//Qu·∫£n l√Ω
export const fetchAllAdminAccount = createAsyncThunk(
  "qlHeThong/fetchAllAdminAccount",
  async (_, { rejectWithValue }) => {
    try {
      const response = await getAllAdminAccount();
      if (response.isSuccess && response.data) {
        return response.data;
      } else {
        return rejectWithValue(
          response.message || "Kh√¥ng th·ªÉ t·∫£i danh s√°ch qu·∫£n l√Ω"
        );
      }
    } catch (error: any) {
      return rejectWithValue(error.message || "L·ªói khi t·∫£i danh s√°ch qu·∫£n l√Ω");
    }
  }
);
